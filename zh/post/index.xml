<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on coderer&amp;debuger&amp;fucker</title>
    <link>/zh/post/</link>
    <description>Recent content in Posts on coderer&amp;debuger&amp;fucker</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>&amp;copy; 2018</copyright>
    <lastBuildDate>Sun, 01 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/zh/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>kafka one</title>
      <link>/zh/post/kafka1/</link>
      <pubDate>Tue, 16 Oct 2018 08:57:42 +0800</pubDate>
      
      <guid>/zh/post/kafka1/</guid>
      <description></description>
    </item>
    
    <item>
      <title>[系统架构设计师考试] day two</title>
      <link>/zh/post/architect_exam_day3/</link>
      <pubDate>Mon, 15 Oct 2018 15:21:46 +0800</pubDate>
      
      <guid>/zh/post/architect_exam_day3/</guid>
      <description> 承接上文
各科目涉及的具体知识点 信息系统综合知识  操作系统基本原理
 文件管理    </description>
    </item>
    
    <item>
      <title>记一个有意思的天空之城梦</title>
      <link>/zh/post/dreamofrocket/</link>
      <pubDate>Mon, 15 Oct 2018 15:21:46 +0800</pubDate>
      
      <guid>/zh/post/dreamofrocket/</guid>
      <description>晚上做了一个很有意思的梦,所以记下来.
我是准备买一只宠物狗,于是去找宠物店,走着走着就像进入一个幻境,来到一个人迹稀少的小镇,这里的环境和美国西部片里的环境类似,沙土很多,然后人迹罕至.期间遇上一个骚年,好像有什么病,皮肤不是很好,衣服也很破,然后我被他莫名奇妙的抓伤了(啊,梦做完了就很模糊了).然后一个好心的妇人帮我包扎伤口,期间询问他哪里可以买宠物,她告诉我可以去买一张乘坐火箭的票,然后去天空的一座城市买.然后我就去买了一张票,几个人抱住火箭,中间是火箭的引擎,冒出滚滚热浪,不一会就到了空中的城市,看到了很多店,猫店,狗店,还有各种吃的,去询问这一整个街道居然都是一个家族管理的.然后去饭店吃饭,他们的菜名很有意思,全是有点人生哲学的名字(记不住,感觉很有思想),然后正要吃我就醒了.
关于这个梦,我觉得是一个写小说的灵感,而那些菜名没准开饭馆很有意思?</description>
    </item>
    
    <item>
      <title>[系统架构设计师考试] day one</title>
      <link>/zh/post/architect_exam_day1/</link>
      <pubDate>Tue, 11 Sep 2018 10:21:28 +0800</pubDate>
      
      <guid>/zh/post/architect_exam_day1/</guid>
      <description> 目前好像有5门高级,[信息系统项目管理师,系统分析师,系统架构设计师,网络规划设计师,系统规划与管理师]有想法刷一下.so,first,从兴趣最大的系统架构设计师开始.官网 本系列博文想以大纲为中心,全程发散思维，胡思乱想。
大纲 考试日期 上半年5月份 下半年11月份,提前2个月关注报名
考试科目设计设置  信息系统综合知识，考试时间为 150 分钟，笔试，选择题；上午9:00-11:30 系统架构设计案例分析，考试时间为 90 分钟，笔试，问答题；下午1:30-3:30 系统架构设计论文，考试时间为 120 分钟，笔试，论文题。下午3:20-5:20  考试要求(按重要性重排序)  熟悉信息系统开发过程； 熟悉主流的中间件和应用服务器平台； 熟练掌握信息安全技术、安全策略、安全管理知识； 熟练阅读和正确理解相关领域的英文文献； 掌握计算机硬软件与网络的基础知识； 掌握应用的数学基础知识; 掌握软件系统建模、系统架构设计基本技术； 理解信息系统开发标准、常用信息技术标准； 了解信息化、信息技术有关法律、法规的基础知识； 了解用户的行业特点，并根据行业特点架构合适的系统设计;   了解：只需要知道有这么个事物，大概的内容就可以了，一般考选择题. 理解：知道并且需要知道为什么，之间的关系，怎么形成，一般简答题和辨析. 掌握：必考，更高的层次，是自己内化后的东西，一般论述和辨析. 熟悉：需要记忆的，一般简答题和选择. 了解熟悉是基础，理解是关键，掌握运用是最终目的考纲里的关于熟悉、理解、掌握的一定要多看多读多分析多写
 从大纲看起来除了法律法规,用户行业特点设计系统,其他都是重点,包括专业英语与应用数学.
各科目涉及的具体知识点 信息系统综合知识  计算机软件与网络基础知识,对应考试要求中[5]掌握计算机硬软件与网络的基础知识,也就是要会运用这些知识去解决问题.  操作系统的类型 你要问类型，自然要知道什么是操作系统。那么以这么多年开发的角度胡诌，操作系统就是能为软件层面的各种资源，包括内存，cpu等进行调度的平台。拿最近接触的kubernate来说，我也可以把k8s理解为分布式的操作系统，而普通大众因为接触windows比较多而把Gui程序理解为操作系统是不对的（linux的gnome等）。
全程指导的描述： 操作系统是计算机系统中的核心系统软件， 负责管理和控制计算机系统中硬件和软件资源，合理地组织计算机工作流程和有效利用资源，在计算机与用户之间起接口的作用。
根据工作方式分为批处理操作系统、分时操作系统、实时操作系统、网络操作系统和分布式操作系统等；
根据架构可以分为单内核操作系统等（单内核、微内核、超微内核、以及外核）；
根据运行的环境，可以分为桌面操作系统，嵌入式操作系统等；
根据指令的长度分为8bit, 16bit, 32bit, 64bit的操作系统。
 操作系统的结构 依据wiki所说操作系统分为四大部分:驱动程序,内核,支承库(接口库;它们职责在于把系统所提供的基本服务包装成应用程序所能够使用的编程接口（API），是最靠近应用程序的部分。),外围(是指操作系统中除以上三类以外的所有其他部分，通常是用于提供特定高级服务的部件。例如，在微内核结构中，大部分系统服务，以及UNIX/Linux中各种守护进程都通常被划归此列。);四大部分的不同布局造成了不同结构。 根据全程指导的说法:无序结构,层次结构, 面向对象结构,对称多处理结构 ,微内核结构.（wiki上是分为简单结构、层结构、微内核结构、垂直结构、和虚拟机结构）。那么多说法，归根到底就是这四大部分怎么布局。    </description>
    </item>
    
    <item>
      <title>[系统架构设计师考试] day two</title>
      <link>/zh/post/architect_exam_day2/</link>
      <pubDate>Tue, 11 Sep 2018 10:21:28 +0800</pubDate>
      
      <guid>/zh/post/architect_exam_day2/</guid>
      <description> 承接上文
各科目涉及的具体知识点 信息系统综合知识  操作系统基本原理 全程指导分了5块讲解:处理器,文件,存储,作业,设备管理.这些基本都是操作系统的职能,那原理自然应该是指这些职能是如何实现的?  处理器管理
从静态观点观点看,进程由程序,数据,进程控制块(PCB:process control block)组成.从动态观点看,进程是计算机状态的一个有序集合. 既然是状态的有序集合,那集合里的元素哪些呢.具备运行条件等待操作系统分配处理器资源,就绪态;占有处理器资源,运行态;不具备运行条件等待某事件发生,等待态(阻塞态).当系统资源(内存)不满足运行时要求,会出现进程挂起,这就又出现了2种状态:静止就绪态和阻塞态,相对应的三态模型中的称活跃就绪态和阻塞态.进程状态转换通过pv操作来控制.pv操作主要就是p操作,v操作,信号量.信号量（Semaphore）由一个值和一个指针组成，指针指向等待该信号量的进程。执行一次p操作,就是请求分配一个资源,s减1,当s=0,s表示可用资源数量.在操作系统中,进程间存在互斥(资源共享)和同步(协作)关系.互斥就是指组织多个进程同时访问这些资源的代码段,这个代码段称为临界区,这个资源成为临界资源.由于只允许一个进入,信号量初始值应该为1.同步点就是说进程a应该在进程b完成某项事情之前一直等待,也就是说进程a的p操作一直等待到进程b的v操作结束才开始,那么信号量初始值应该从0开始.
 生产者消费者问题
这里面存在一个竞争条件的例子(竞争条件指多个线程或者进程在读写一个共享数据时结果依赖于它们执行的相对时间的情形。):如果只监控fillCount(生产条数),对于producer,当等于1的时候就唤醒consumer,等于cache size的时候就sleep;对于consumer,当等于cache size-1的时候就唤醒producer,等于0的时候就sleep.理想情况下肯定没问题,但是存在时间片(时间片即CPU分配给各个程序的时间，每个线程被分配一个时间段，称作它的时间片，即该进程允许运行的时间，使各个程序从表面上看是同时进行的。如果在时间片结束时进程还在运行，则CPU将被剥夺并分配给另一个进程。).也就是说,这个变量是被2个进程同时访问的,随时都有可能执行一半的时候变量被更改.比如此时变量为0,consumer运行到过了0判断准备sleep的时候,这时候producer生产了1个数据,并讲变量更改为1,并去唤醒consumer,但consumer还没sleep呢,唤醒失败,运行sleep成功.然后producer一发不可收拾,一直生产直到满缓存.分析原因,变量在2个进程中都可以读取和写入.那么引入信号量算法解决.    </description>
    </item>
    
  </channel>
</rss>